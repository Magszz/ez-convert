{"version":3,"sources":["components/Navigation.jsx","components/PDF/PDF.jsx","components/WORD/WORD.jsx","App.js","index.js"],"names":["Navigation","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","id","Nav","className","Link","PDF","useState","file","setFile","name","setName","error","setError","success","setSuccess","loading","setLoading","useEffect","setTimeout","submitHanlder","e","a","preventDefault","data","FormData","append","axios","post","headers","Authorization","process","responseType","then","response","FileDownload","Alert","variant","icon","faFilePdf","Form","onSubmit","type","onChange","inputType","target","files","inputName","includes","required","Button","disabled","WORD","App","exact","path","to","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06b30b6e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { Container, Navbar, Nav } from 'react-bootstrap'\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">EZ Convert</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"/\">PDF to Word</Nav.Link>\r\n            <Nav.Link href=\"/convert/word-pdf\">Word to PDF</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport FileDownload from 'js-file-download'\r\n\r\n// Components\r\nimport { Container, Alert, Form, Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilePdf } from '@fortawesome/free-regular-svg-icons'\r\n\r\nconst PDF = () => {\r\n  const [file, setFile] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [error, setError] = useState('')\r\n  const [success, setSuccess] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const token = process.env.REACT_APP_BACKEND_TOKEN\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setError(false)\r\n      setSuccess(false)\r\n    }, 1500)\r\n  }, [error, setError, success, setSuccess])\r\n\r\n  // Functions\r\n  const changeHandler = (e) => {\r\n    const type = ['application/pdf']\r\n    const inputType = e.target.files[0].type\r\n    const inputName = e.target.files[0].name\r\n\r\n    if (!type.includes(inputType)) {\r\n      setFile('')\r\n      return setError(\r\n        'WHOOPS! You inserted unsupported file. Please insert PDF file only',\r\n      )\r\n    }\r\n\r\n    setFile(e.target.files[0])\r\n    setName(inputName)\r\n  }\r\n\r\n  const submitHanlder = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    const data = new FormData()\r\n    data.append('file', file)\r\n\r\n    try {\r\n      await axios\r\n        .post(\r\n          'https://glacial-plains-30860.herokuapp.com/pdf-docx/convert',\r\n          data,\r\n          {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n              Authorization: `${token}`,\r\n            },\r\n            responseType: 'blob',\r\n          },\r\n        )\r\n        .then((response) => FileDownload(response.data, 'coverted.docx'))\r\n      setLoading(false)\r\n      setSuccess(true)\r\n      setName('')\r\n    } catch (err) {\r\n      setError(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <div className=\"my-2 d-flex align-items-center justify-content-center\">\r\n          <div className=\"my-5 text-center w-75\">\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            {success && (\r\n              <Alert variant=\"success\">Converted file successfully</Alert>\r\n            )}\r\n            <div>\r\n              <h4>\r\n                <FontAwesomeIcon\r\n                  icon={faFilePdf}\r\n                  className=\"fa-fw text-primary\"\r\n                />{' '}\r\n                PDF to Word Converter\r\n              </h4>\r\n              <p className=\"lead\">It converts PDF to Word easily</p>\r\n            </div>\r\n            <div>\r\n              <Form onSubmit={submitHanlder}>\r\n                <div className=\"Form__input p-2\">\r\n                  <label>\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={changeHandler}\r\n                      name=\"file\"\r\n                      required\r\n                    />\r\n                    <p className=\"Form__btn d-flex align-items-center justify-content-center rounded-circle border border-primary\">\r\n                      +\r\n                    </p>\r\n                  </label>\r\n                  <p className=\"lead\">{name}</p>\r\n                </div>\r\n                <div className=\"\">\r\n                  <Button\r\n                    disabled={loading}\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"btn-block\"\r\n                  >\r\n                    {loading ? 'Converting . . .' : 'Convert'}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PDF\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport FileDownload from 'js-file-download'\r\n\r\n// Components\r\nimport { Container, Alert, Form, Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilePdf } from '@fortawesome/free-regular-svg-icons'\r\n\r\nconst WORD = () => {\r\n  const [file, setFile] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [error, setError] = useState('')\r\n  const [success, setSuccess] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const token = process.env.REACT_APP_BACKEND_TOKEN\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setError(false)\r\n      setSuccess(false)\r\n    }, 1500)\r\n  }, [error, setError, success, setSuccess])\r\n\r\n  // Functions\r\n  const changeHandler = (e) => {\r\n    const type = [\r\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    ]\r\n    const inputType = e.target.files[0].type\r\n    const inputName = e.target.files[0].name\r\n\r\n    if (!type.includes(inputType)) {\r\n      setFile('')\r\n      return setError(\r\n        'WHOOPS! You inserted unsupported file. Please insert Docx file only',\r\n      )\r\n    }\r\n\r\n    setFile(e.target.files[0])\r\n    setName(inputName)\r\n  }\r\n\r\n  const submitHanlder = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    const data = new FormData()\r\n    data.append('file', file)\r\n\r\n    try {\r\n      await axios\r\n        .post(\r\n          'https://glacial-plains-30860.herokuapp.com/docx-pdf/convert',\r\n          data,\r\n          {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n              Authorization: `${token}`,\r\n            },\r\n            responseType: 'blob',\r\n          },\r\n        )\r\n        .then((response) => FileDownload(response.data, 'coverted.pdf'))\r\n      setLoading(false)\r\n      setSuccess(true)\r\n      setName('')\r\n    } catch (err) {\r\n      setError(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <div className=\"my-2 d-flex align-items-center justify-content-center\">\r\n          <div className=\"my-5 text-center w-75\">\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            {success && (\r\n              <Alert variant=\"success\">Converted file successfully</Alert>\r\n            )}\r\n            <div>\r\n              <h4>\r\n                <FontAwesomeIcon\r\n                  icon={faFilePdf}\r\n                  className=\"fa-fw text-primary\"\r\n                />{' '}\r\n                Word to PDF Converter\r\n              </h4>\r\n              <p className=\"lead\">It converts Word to PDF easily</p>\r\n            </div>\r\n            <div>\r\n              <Form onSubmit={submitHanlder}>\r\n                <div className=\"Form__input p-2\">\r\n                  <label>\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={changeHandler}\r\n                      name=\"file\"\r\n                      required\r\n                    />\r\n                    <p className=\"Form__btn d-flex align-items-center justify-content-center rounded-circle border border-primary\">\r\n                      +\r\n                    </p>\r\n                  </label>\r\n                  <p className=\"lead\">{name}</p>\r\n                </div>\r\n                <div className=\"\">\r\n                  <Button\r\n                    disabled={loading}\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"btn-block\"\r\n                  >\r\n                    {loading ? 'Converting . . .' : 'Convert'}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WORD\r\n","import React from 'react'\n\n// Styles\nimport './App.css'\n\n// Components\nimport { Navigation, PDF, WORD } from './components'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom'\n\nconst App = () => {\n  return (\n    <div>\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/convert/pdf-word\" />\n          </Route>\n          <Route path=\"/convert/pdf-word\" component={PDF} />\n          <Route path=\"/convert/word-pdf\" component={WORD} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}